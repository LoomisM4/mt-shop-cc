// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var welcome = Welcome.FromJson(jsonString);

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Response
    {
        [JsonProperty("_embedded")]
        public Embedded Embedded { get; set; }
    }

    public partial class Embedded
    {
        [JsonProperty("articles")]
        public Article[] Articles { get; set; }
        [JsonProperty("categories")]
        public Category[] Categories { get; set; }
    }

    public partial class Article
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("price")]
        public double Price { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("_links")]
        public Links Links { get; set; }
    }

    public partial class Category
    {
        [JsonProperty("categoryId")]
        public long CategoryId { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("_links")]
        public Links Links { get; set; }
    }

    public partial class Links
    {
        [JsonProperty("spotlightImage")]
        public Link SpotlightImage { get; set; }

        [JsonProperty("details")]
        public Link Details { get; set; }

        [JsonProperty("subcategories")]
        public Link Subcategories { get; set; }
        
        [JsonProperty("articles")]
        public Link Articles { get; set; }

        [JsonProperty("preview")]
        public Link Preview { get; set; }

        [JsonProperty("images")]
        public Link[] Images { get; set; }
    }

    public partial class Link
    {
        [JsonProperty("href")]
        public Uri Href { get; set; }
    }

    public partial class Article
    {
        public static Article FromJson(string json) => JsonConvert.DeserializeObject<Article>(json, QuickType.Converter.Settings);
    }

    public static class SerializeArticle
    {
        public static string ToJson(this Article self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
    }

    public partial class Response
    {
        public static Response FromJson(string json) => JsonConvert.DeserializeObject<Response>(json, QuickType.Converter.Settings);
    }

    public static class SerializeResponse
    {
        public static string ToJson(this Response self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
